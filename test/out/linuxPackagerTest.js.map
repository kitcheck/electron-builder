{
  "version": 3,
  "file": "linuxPackagerTest.js",
  "sourceRoot": "",
  "sources": [
    "../src/linuxPackagerTest.ts"
  ],
  "names": [],
  "mappings": ";;AAAA,wBAAiB,AAAiB,AAClC,AAAC;AAAD,6BAAkD,AAAsB,AACxE,AAAC;AAAD,6BAAuB,AAAY,AACnC,AAAC;AAAD,MAAY,AAAI,eAAM,AAAM,AAC5B,AAAC;AAAD,sBAAyB,AAAK,AAC9B,AAAC;AAAD,2BAAqB,AAAc,AAGnC,AAAC;AAAD,MAAM,AAAS,YAAG,AAAO,QAAC,AAAkB,AAAC;AAE7C,QAAI,QAAC,AAAY,aAAC,AAAK,OAAE,aAAG,IAAC,EAAC,AAAO,SAAE,MAAQ,SAAC,AAAK,MAAC,AAAY,aAAC,AAAK,AAAC,AAAC,AAAC,AAAC;AAE5E,QAAI,QAAC,AAAY,aAAC,AAAS,WAAE,aAAG,IAAC,EAAC,AAAO,SAAE,MAAQ,SAAC,AAAK,MAAC,AAAY,aAAC,AAAK,OAAE,WAAI,KAAC,AAAM,AAAC,AAAC,AAAC,AAAC;AAE7F,QAAI,QAAC,AAAc,eAAC,AAAU,YAAE,aAAG,IAAC,EAAC,AAAO,SAAE,MAAQ,SAAC,AAAK,MAAC,AAAY,AAAE,AAAC,AAAC,AAAC;AAE9E,QAAI,QAAC,AAAc,eAAC,AAAyB,wCAAK,IAAC,EAAC,AAAO,SAAE,MAAQ,SAAC,AAAK,MAAC,AAAY,aAAC,AAAU,AAAC,AAAC;AACnG,AAAiB,uBAAE,AAAU,cAAI,aAAM,OAAC,AAAI,KAAC,AAAI,KAAC,AAAU,YAAE,AAAO,AAAC,AAAC,AACxE,AAAC,AAAC;AAFoG,CAAxD;AAK/C,QAAI,QAAC,AAAc,eAAC,AAAS,WAAE,aAAG,IAAC,EAAC,AAAO,SAAE,MAAQ,SAAC,AAAK,MAAC,AAAY,aAAC,CAAC,AAAI,MAAE,AAAS,WAAE,AAAQ,UAAE,AAAK,OAAE,AAAI,AAAC,AAAC,AAAC,AAAC,AAAC;AAErH,QAAI,QAAC,AAAc,eAAC,AAAK,OAAE,aAAG,IAAC,EAAC,AAAO,SAAE,MAAQ,SAAC,AAAK,MAAC,AAAY,aAAC,CAAC,AAAQ,UAAE,AAAQ,UAAE,AAAS,AAAC,AAAC,AAAC,AAAC,AAAC;AAIxG,QAAI,QAAC,AAAc,eAAC,AAAgB,kBAAE,aAAG,IAAC,EAAC,AAAO,SAAE,MAAQ,SAAC,AAAK,MAAC,AAAY,aAAC,CAAC,AAAK,OAAE,AAAQ,AAAC,AAAC,AAAC,AAAC,AAAC;AAErG,QAAI,QAAC,AAAY,aAAC,AAAiB,gCAAK,IAAC,EAAC,AAAO,SAAE,MAAQ,SAAC,AAAK,MAAC,AAAY,AAAE,AAAC;AAC/E,AAAiB,uBAAE,AAAE,MAAI,aAAM,OAAC,AAAI,KAAC,AAAI,KAAC,AAAE,IAAE,AAAO,SAAE,AAAO,AAAC,AAAC,AACjE,AAAC,AAAC;AAFgF,CAA9C;AAIrC,QAAI,QAAC,AAAY,aAAC,AAAgB,+BAAK;AACnC,AAAO,aAAE,MAAQ,SAAC,AAAK,MAAC,AAAY,aAAC,AAAK,AAAC;AAC3C,AAAW;AACT,AAAK;AACH,AAAG;AACD,AAAO,yBAAE,CAAC,AAAK,AAAC,AACjB,AACF,AACF,AACF;AALU;AADA;AADI;AAFuB,CAAJ;AAWhC,AAAe,qBAAE,AAAK,AACvB,AAAC,AAAC;AAFH;AAIF,QAAI,QAAC,AAAY,aAAC,AAAiB,gCAAW,UAAC,AAAqC,uCAAE,EAAC,AAAO,SAAE,MAAQ,SAAC,AAAK,MAAC,AAAY,aAAC,AAAK,AAAC,AAAC;AACjI,AAAiB,uBAAE,AAAU,2BAAqB,kBAAC,AAAU,YAAE,AAAI;AACjE,AAAI,aAAC,AAAM,SAAG,AAAK,AACrB;AAAC,AAAC,AACH,AAAC,AAAC,KAHgC;AADkG,CAAhG",
  "sourcesContent": [
    "import test from \"./helpers/avaEx\"\nimport { modifyPackageJson, app, appThrows } from \"./helpers/packTester\"\nimport { remove } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport { Platform } from \"out\"\nimport { Arch } from \"out/metadata\"\n\n//noinspection JSUnusedLocalSymbols\nconst __awaiter = require(\"out/util/awaiter\")\n\ntest.ifNotWindows(\"deb\", app({targets: Platform.LINUX.createTarget(\"deb\")}))\n\ntest.ifNotWindows(\"arm deb\", app({targets: Platform.LINUX.createTarget(\"deb\", Arch.armv7l)}))\n\ntest.ifDevOrLinuxCi(\"AppImage\", app({targets: Platform.LINUX.createTarget()}))\n\ntest.ifDevOrLinuxCi(\"AppImage - default icon\", app({targets: Platform.LINUX.createTarget(\"appimage\")}, {\n  projectDirCreated: projectDir => remove(path.join(projectDir, \"build\"))\n}))\n\n// \"apk\" is very slow, don't test for now\ntest.ifDevOrLinuxCi(\"targets\", app({targets: Platform.LINUX.createTarget([\"sh\", \"freebsd\", \"pacman\", \"zip\", \"7z\"])}))\n\ntest.ifDevOrLinuxCi(\"tar\", app({targets: Platform.LINUX.createTarget([\"tar.xz\", \"tar.lz\", \"tar.bz2\"])}))\n\n// https://github.com/electron-userland/electron-builder/issues/460\n// for some reasons in parallel to fmp we cannot use tar\ntest.ifDevOrLinuxCi(\"rpm and tar.gz\", app({targets: Platform.LINUX.createTarget([\"rpm\", \"tar.gz\"])}))\n\ntest.ifNotWindows(\"icons from ICNS\", app({targets: Platform.LINUX.createTarget()}, {\n  projectDirCreated: it => remove(path.join(it, \"build\", \"icons\"))\n}))\n\ntest.ifNotWindows(\"custom depends\", app({\n    targets: Platform.LINUX.createTarget(\"deb\"),\n    devMetadata: {\n      build: {\n        deb: {\n          depends: [\"foo\"],\n        }\n      }\n    }\n  },\n  {\n    expectedDepends: \"foo\"\n  }))\n\ntest.ifNotWindows(\"no-author-email\", appThrows(/Please specify author 'email' in .+/, {targets: Platform.LINUX.createTarget(\"deb\")}, {\n  projectDirCreated: projectDir => modifyPackageJson(projectDir, data => {\n    data.author = \"Foo\"\n  })\n}))"
  ]
}
