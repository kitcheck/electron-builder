{
  "version": 3,
  "file": "RepoSlugTest.js",
  "sourceRoot": "",
  "sources": [
    "../src/RepoSlugTest.ts"
  ],
  "names": [],
  "mappings": ";;AACA,6BAA2B,AAAsB,AACjD,AAAC;AAAD,yBAAiB,AAAQ,AACzB,AAAC;AACD,iCAAkC,AAAoB,AAGtD,AAAC;AAAD,MAAM,AAAS,YAAG,AAAO,QAAC,AAAkB,AAAC;AAE7C,SAAI,QAAC,AAAiC,mCAAE;AACtC,UAAM,AAAQ,WAAG,AAAO,QAAC,AAAG,IAAC,AAAgB;AAC7C,QAAI,AAAC;AACH,AAAO,gBAAC,AAAG,IAAC,AAAgB,mBAAG,AAAwB;AACvD,cAAM,AAAI,OAA2B,iBAAiB,AAAG,oBAAC,AAAK,AAAE;AACjE,qBAAU,WAAC,AAAI,AAAC,MAAC,AAAa;AAC5B,AAAI,kBAAE,AAAW;AACjB,AAAO,qBAAE,AAAc,AACxB,AAAC,AACJ;AAJiC;AAIhC,cACO,AAAC;AACP,AAAE,AAAC,YAAC,AAAQ,YAAI,AAAI,AAAC,MAAC,AAAC;AACrB,AAAU,uBAAC,AAAkB,oBAAE,AAAQ,AAAC,AAC1C;AAAC,AACH;AAAC,AACH;AAAC,AAAC;AAEF,oBAAoB,AAAY,MAAE,AAAa;AAC7C,AAAE,AAAC,QAAC,AAAK,SAAI,AAAI,AAAC,MAAC,AAAC;AAElB,AAAO,gBAAC,AAAG,IAAC,AAAI,AAAC,QAAG,AAAK,AAC3B;AAAC,AACH;AAAC;AAED,SAAI,QAAC,AAAyB,2BAAE;AAC9B,UAAM,AAAsB,yBAAG,AAAO,QAAC,AAAG,IAAC,AAAqB;AAChE,UAAM,AAAsB,yBAAG,AAAO,QAAC,AAAG,IAAC,AAAqB;AAChE,UAAM,AAAU,aAAG,AAAO,QAAC,AAAG,IAAC,AAAgB;AAC/C,QAAI,AAAC;AACH,AAAE,AAAC,YAAC,AAAU,cAAI,AAAI,AAAC,MAAC,AAAC;AACvB,mBAAO,AAAO,QAAC,AAAG,IAAC,AAAgB,AACrC;AAAC;AAED,AAAO,gBAAC,AAAG,IAAC,AAAqB,wBAAG,AAAW;AAC/C,AAAO,gBAAC,AAAG,IAAC,AAAqB,wBAAG,AAAc;AAClD,cAAM,AAAI,OAA2B,iBAAiB,AAAG,oBAAC,AAAK,AAAE;AACjE,qBAAU,WAAC,AAAI,AAAC,MAAC,AAAa;AAC5B,AAAI,kBAAE,AAAW;AACjB,AAAO,qBAAE,AAAc,AACxB,AAAC,AACJ;AAJiC;AAIhC,cACO,AAAC;AACP,AAAU,mBAAC,AAAuB,yBAAE,AAAsB,AAAC;AAC3D,AAAU,mBAAC,AAAuB,yBAAE,AAAsB,AAAC;AAC3D,AAAE,AAAC,YAAC,AAAU,cAAI,AAAI,AAAC,MAAC,AAAC;AACvB,AAAO,oBAAC,AAAG,IAAC,AAAgB,mBAAG,AAAU,AAC3C;AAAC,AACH;AAAC,AACH;AAAC,AAAC",
  "sourcesContent": [
    "import { Info } from \"hosted-git-info\"\nimport { assertThat } from \"./helpers/fileAssert\"\nimport test from \"ava-tf\"\nimport { Promise as BluebirdPromise } from \"bluebird\"\nimport { getRepositoryInfo } from \"out/repositoryInfo\"\n\n//noinspection JSUnusedLocalSymbols\nconst __awaiter = require(\"out/util/awaiter\")\n\ntest(\"repo slug from TRAVIS_REPO_SLUG\", () => {\n  const oldValue = process.env.TRAVIS_REPO_SLUG\n  try {\n    process.env.TRAVIS_REPO_SLUG = \"travis-ci/travis-build\"\n    const info = (<BluebirdPromise<Info>>getRepositoryInfo()).value()\n    assertThat(info).hasProperties({\n      user: \"travis-ci\",\n      project: \"travis-build\",\n    })\n  }\n  finally {\n    if (oldValue != null) {\n      restoreEnv(\"TRAVIS_REPO_SLUG\", oldValue)\n    }\n  }\n})\n\nfunction restoreEnv(name: string, value: string) {\n  if (value != null) {\n    // otherwise will be set to string value \"undefined\"\n    process.env[name] = value\n  }\n}\n\ntest(\"repo slug from APPVEYOR\", () => {\n  const oldAppveyorAccountName = process.env.APPVEYOR_ACCOUNT_NAME\n  const oldAppveyorProjectName = process.env.APPVEYOR_PROJECT_NAME\n  const travisSlug = process.env.TRAVIS_REPO_SLUG\n  try {\n    if (travisSlug != null) {\n      delete process.env.TRAVIS_REPO_SLUG\n    }\n\n    process.env.APPVEYOR_ACCOUNT_NAME = \"travis-ci\"\n    process.env.APPVEYOR_PROJECT_NAME = \"travis-build\"\n    const info = (<BluebirdPromise<Info>>getRepositoryInfo()).value()\n    assertThat(info).hasProperties({\n      user: \"travis-ci\",\n      project: \"travis-build\",\n    })\n  }\n  finally {\n    restoreEnv(\"APPVEYOR_ACCOUNT_NAME\", oldAppveyorAccountName)\n    restoreEnv(\"APPVEYOR_PROJECT_NAME\", oldAppveyorProjectName)\n    if (travisSlug != null) {\n      process.env.TRAVIS_REPO_SLUG = travisSlug\n    }\n  }\n})"
  ]
}
