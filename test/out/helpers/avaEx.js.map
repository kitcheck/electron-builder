{
  "version": 3,
  "file": "avaEx.js",
  "sourceRoot": "",
  "sources": [
    "../../src/helpers/avaEx.ts"
  ],
  "names": [],
  "mappings": ";;AAAA,yBAAiB,AAAQ,AAIzB,AAAC;AAcD,AAAM,OAAC,AAAgB,iBAAC,SAAI;AAC1B,AAAc;AACZ,AAAG,aAAE;AACH,AAAM,mBAAC,AAAO,QAAC,AAAQ,aAAK,AAAO,UAAG,AAAI,KAAC,AAAI,OAAG,AAAI,AACxD;AAAC,AACF;AAJe;AAKhB,AAAS;AACP,AAAG,aAAE;AACH,AAAM,mBAAC,AAAO,QAAC,AAAG,IAAC,AAAE,KAAG,AAAI,KAAC,AAAI,OAAG,AAAI,AAC1C;AAAC,AACF;AAJU;AAKX,AAAM;AACJ,AAAG,aAAE;AACH,AAAM,mBAAC,AAAO,QAAC,AAAG,IAAC,AAAE,KAAG,AAAI,OAAG,AAAI,KAAC,AAAI,AAC1C;AAAC,AACF;AAJO;AAKR,AAAY;AACV,AAAG,aAAE;AACH,AAAM,mBAAC,AAAO,QAAC,AAAG,IAAC,AAAE,MAAI,AAAO,QAAC,AAAQ,aAAK,AAAQ,WAAG,AAAI,KAAC,AAAI,OAAG,AAAI,AAC3E;AAAC,AACF;AAJa;AAKd,AAAa;AACX,AAAG,aAAE;AACH,AAAM,mBAAC,AAAO,QAAC,AAAG,IAAC,AAAM,SAAG,AAAI,KAAC,AAAI,OAAG,AAAI,AAC9C;AAAC,AACF;AAJc;AAKf,AAAO;AACL,AAAG,aAAE;AACH,AAAM,mBAAC,AAAO,QAAC,AAAQ,aAAK,AAAQ,WAAG,AAAI,OAAG,AAAI,KAAC,AAAI,AACzD;AAAC,AACF;AAJQ;AAKT,AAAc;AACZ,AAAG,aAAE;AACH,AAAM,mBAAC,AAAO,QAAC,AAAG,IAAC,AAAE,MAAI,AAAI,QAAI,AAAO,QAAC,AAAQ,aAAK,AAAO,UAAG,AAAI,OAAG,AAAI,KAAC,AAAI,AAClF;AAAC,AACF;AAJe;AAKhB,AAAgB;AACd,AAAG,aAAE;AACH,AAAM,mBAAC,AAAO,QAAC,AAAG,IAAC,AAAE,MAAI,AAAI,QAAI,AAAO,QAAC,AAAQ,aAAK,AAAO,UAAG,AAAI,OAAG,AAAI,KAAC,AAAI,AAClF;AAAC,AACF;AAJiB;AAKlB,AAAS;AACP,AAAG,aAAE;AACH,AAAM,mBAAC,CAAC,AAAO,QAAC,AAAG,IAAC,AAAE,MAAI,AAAE,AAAC,IAAC,AAAW,AAAE,kBAAK,AAAM,UAAI,AAAO,QAAC,AAAQ,aAAK,AAAO,UAAG,AAAI,OAAG,AAAI,KAAC,AAAI,AAC3G;AAAC,AACF,AACF,AAAC;AALW;AAzCiB;AAgD9B;kBAAe,SAAI",
  "sourcesContent": [
    "import test from \"ava-tf\"\n\n/* tslint:disable:no-invalid-this no-namespace */\n\ndeclare module \"ava-tf\" {\n  namespace test {\n    export const ifNotWindows: typeof test\n    export const ifOsx: typeof test\n    export const ifNotCi: typeof test\n    export const ifCi: typeof test\n    export const ifNotCiOsx: typeof test\n    export const ifDevOrWinCi: typeof test\n    export const ifWinCi: typeof test\n    export const ifDevOrLinuxCi: typeof test\n    export const ifNotTravis: typeof test\n  }\n}\n\nObject.defineProperties(test, {\n  \"ifNotWindows\": {\n    get: function () {\n      return process.platform === \"win32\" ? this.skip : this\n    }\n  },\n  \"ifNotCi\": {\n    get: function () {\n      return process.env.CI ? this.skip : this\n    }\n  },\n  \"ifCi\": {\n    get: function () {\n      return process.env.CI ? this : this.skip\n    }\n  },\n  \"ifNotCiOsx\": {\n    get: function () {\n      return process.env.CI && process.platform === \"darwin\" ? this.skip : this\n    }\n  },\n  \"ifNotTravis\": {\n    get: function () {\n      return process.env.TRAVIS ? this.skip : this\n    }\n  },\n  \"ifOsx\": {\n    get: function () {\n      return process.platform === \"darwin\" ? this : this.skip\n    }\n  },\n  \"ifDevOrWinCi\": {\n    get: function () {\n      return process.env.CI == null || process.platform === \"win32\" ? this : this.skip\n    }\n  },\n  \"ifDevOrLinuxCi\": {\n    get: function () {\n      return process.env.CI == null || process.platform === \"linux\" ? this : this.skip\n    }\n  },\n  \"ifWinCi\": {\n    get: function () {\n      return (process.env.CI || \"\").toLowerCase() === \"true\" && process.platform === \"win32\" ? this : this.skip\n    }\n  }\n})\n\nexport default test"
  ]
}
