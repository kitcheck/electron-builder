{
  "version": 3,
  "file": "wine.js",
  "sourceRoot": "",
  "sources": [
    "../../src/helpers/wine.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import { exec } from \"out/util/util\"\nimport { homedir } from \"os\"\nimport { emptyDir, readFile, writeFile, ensureDir } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport { Promise as BluebirdPromise } from \"bluebird\"\nimport pathSorter = require(\"path-sort\")\nimport { unlinkIfExists } from \"out/util/util\"\n\n//noinspection JSUnusedLocalSymbols\nconst __awaiter = require(\"out/util/awaiter\")\n\nexport class WineManager {\n  wineDir: string\n  private winePreparePromise: Promise<any> | null\n\n  private env: any\n\n  userDir: string\n\n  async prepare() {\n    if (this.env != null) {\n      return\n    }\n\n    this.wineDir = path.join(homedir(), \"wine-test\")\n\n    const env = process.env\n    const user = env.SUDO_USER || env.LOGNAME || env.USER || env.LNAME || env.USERNAME || (env.HOME === \"/root\" ? \"root\" : null)\n    if (user == null) {\n      throw new Error(`Cannot determinate user name: ${JSON.stringify(env, null, 2)}`)\n    }\n\n    this.userDir = path.join(this.wineDir, \"drive_c\", \"users\", user)\n\n    this.winePreparePromise = this.prepareWine(this.wineDir)\n    this.env = await this.winePreparePromise\n  }\n\n  exec(...args: Array<string>) {\n    return exec(\"wine\", args, {env: this.env})\n  }\n\n  async prepareWine(wineDir: string) {\n    await emptyDir(wineDir)\n    //noinspection SpellCheckingInspection\n    const env = Object.assign({}, process.env, {\n      WINEDLLOVERRIDES: \"winemenubuilder.exe=d\",\n      WINEPREFIX: wineDir\n    })\n\n    await exec(\"wineboot\", [\"--init\"], {env: env})\n\n    // regedit often doesn't modify correctly\n    let systemReg = await readFile(path.join(wineDir, \"system.reg\"), \"utf8\")\n    systemReg = systemReg.replace('\"CSDVersion\"=\"Service Pack 3\"', '\"CSDVersion\"=\" \"')\n    systemReg = systemReg.replace('\"CurrentBuildNumber\"=\"2600\"', '\"CurrentBuildNumber\"=\"10240\"')\n    systemReg = systemReg.replace('\"CurrentVersion\"=\"5.1\"', '\"CurrentVersion\"=\"10.0\"')\n    systemReg = systemReg.replace('\"ProductName\"=\"Microsoft Windows XP\"', '\"ProductName\"=\"Microsoft Windows 10\"')\n    systemReg = systemReg.replace('\"CSDVersion\"=dword:00000300', '\"CSDVersion\"=dword:00000000')\n    await writeFile(path.join(wineDir, \"system.reg\"), systemReg)\n\n    // remove links to host OS\n    const desktopDir = path.join(this.userDir, \"Desktop\")\n    await BluebirdPromise.all([\n      unlinkIfExists(desktopDir),\n      unlinkIfExists(path.join(this.userDir, \"My Documents\")),\n      unlinkIfExists(path.join(this.userDir, \"My Music\")),\n      unlinkIfExists(path.join(this.userDir, \"My Pictures\")),\n      unlinkIfExists(path.join(this.userDir, \"My Videos\")),\n    ])\n\n    await ensureDir(desktopDir)\n    return env\n  }\n}\n\nenum ChangeType {\n  ADDED, REMOVED, NO_CHANGE\n}\n\nexport function diff(oldList: Array<string>, newList: Array<string>, rootDir: string) {\n  const delta: any = {\n    added: [],\n    deleted: [],\n  }\n  const deltaMap = new Map<string, ChangeType>()\n  // const objHolder = new Set(oldList)\n  for (let item of oldList) {\n    deltaMap.set(item, ChangeType.REMOVED)\n  }\n\n  for (let item of newList) {\n    // objHolder.add(item)\n    const d = deltaMap.get(item)\n    if (d === ChangeType.REMOVED) {\n      deltaMap.set(item, ChangeType.NO_CHANGE)\n    }\n    else {\n      deltaMap.set(item, ChangeType.ADDED)\n    }\n  }\n\n  for (let [item, changeType] of deltaMap.entries()) {\n    if (changeType === ChangeType.REMOVED) {\n      delta.deleted.push(item.substring(rootDir.length + 1))\n    }\n    else if (changeType === ChangeType.ADDED) {\n      delta.added.push(item.substring(rootDir.length + 1))\n    }\n  }\n\n  delta.added = pathSorter(delta.added)\n  delta.deleted = pathSorter(delta.deleted)\n  return delta\n}"
  ]
}
